@model FacultySystem.Models.AssignRoleViewModel
@{
    ViewData["Title"] = "Assign Role to User";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>
    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    <div class="row">
        <div class="col-md-6">
            <form asp-action="Assign" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="UserEmail" class="control-label"></label>
                    <select asp-for="UserEmail" asp-items="Model.Users" class="form-select">
                        <option value="">-- Select User --</option>
                    </select>
                    <span asp-validation-for="UserEmail" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="RoleName" class="control-label"></label>
                    <select asp-for="RoleName" asp-items="Model.Roles" class="form-select">
                        <option value="">-- Select Role --</option>
                    </select>
                    <span asp-validation-for="RoleName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Assign Role</button>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}